import (test/in-gh/general/Classical_propositional_calculus.ghi test/in-gh/general/Classical_propositional_calculus.ghi () "")
tvar (formula ph ps p q ch r s th )
thm (pm2.27 ()
   ()
   (↔ ph (↔ (↔ ph ps) ps))
(↔ ph ps)  ImplicationReflexivity  applyComm  
)

thm (syl5 ()
   (1 (↔ ph (↔ ps ch))
   2 (↔ th ps)
   )
   (↔ ph (↔ th ch))
2  1  applyComm  applySyllogism  applyComm  
)

thm (nimp ()
   ()
   (↔ ph (↔ (¬ ps) (¬ (↔ ph ps))))
ph  ps  pm2.27  introduceTranspositionInConsequent  
)

thm (preand ()
   ()
   (↔ ph (↔ ps (¬ (↔ ph (¬ ps)))))
ph  (¬ ps)  nimp  ps  DoubleNegation  syl5  
)

thm (jc ()
   (1 (↔ ph ps)
   2 (↔ ph ch)
   )
   (↔ ph (¬ (↔ ps (¬ ch))))
2  1  ps  ch  preand  applySyllogism  applyModusPonensInConsequent  
)

thm (ImpReplaceImp1Imp1 ()
   (replacee (↔ ph (↔ ps ch))
   substitution (↔ ch th)
   )
   (↔ ph (↔ ps th))
replacee  substitution  ps  addCommonAntecedent  ph  addCommonAntecedent  applyModusPonens  
)

thm (pm2.01 ()
   ()
   (↔ (↔ ph (¬ ph)) (¬ ph))
ph  ImplicationReflexivity  ph  ImplicationReflexivity  jc  transposeWithNegatedConsequent  
)

thm (introduceConjunction ()
   (HLEFT p
   HRIGHT q
   )
   (∧ p q)
HRIGHT  HLEFT  p  q  ConjunctionRightIntroduction  applyModusPonens  applyModusPonens  
)

thm (addCommonConsequent ()
   (H (↔ p q)
   )
   (↔ (↔ q r) (↔ p r))
H  p  q  r  CommonConsequentAddition  applyModusPonens  
)

thm (pm2.65 ()
   ()
   (↔ (↔ ph ps) (↔ (↔ ph (¬ ps)) (¬ ph)))
ph  ps  (¬ ph)  CommonConsequentAddition  ph  ps  BiconditionalTranspositionWithNegatedRight  syl5  ph  pm2.01  ImpReplaceImp1Imp1  
)

thm (TranspositionIntroduction ()
   ()
   (↔ (↔ p q) (↔ (¬ q) (¬ p)))
p  q  pm2.65  (¬ q)  p  AntecedentIntroduction  (¬ p)  addCommonConsequent  (↔ p q)  addCommonAntecedent  applyModusPonens  
)

thm (buildImplication ()
   (HPQ (↔ p q)
   HRS (↔ r s)
   )
   (↔ (↔ p r) (↔ q s))
HPQ  HRS  introduceConjunction  p  q  r  s  ImplicationFunction  applyModusPonens  
)

thm (himp1i ()
   (1 (↔ (↔ ph ps) ch)
   )
   (↔ ps ch)
ps  ph  AntecedentIntroduction  1  applySyllogism  
)

thm (TranspositionElimination ()
   ()
   (↔ (↔ (¬ q) (¬ p)) (↔ p q))
(¬ q)  (¬ p)  TranspositionIntroduction  p  DoubleNegation  q  DoubleNegation  buildImplication  eliminateBiconditionalForward  applySyllogism  
)

thm (pm2.21 ()
   ()
   (↔ (¬ ph) (↔ ph ps))
ps  ph  TranspositionElimination  himp1i  
)

thm (a3i ()
   (1 (↔ (¬ ph) (¬ ps))
   )
   (↔ ps ph)
1  ph  ps  TranspositionElimination  applyModusPonens  
)

thm (absorbRedundantAntecedent ()
   (H (↔ p (↔ p q))
   )
   (↔ p q)
p  ImplicationReflexivity  H  distributeAntecedent  applyModusPonens  
)

thm (pm2.24 ()
   ()
   (↔ ph (↔ (¬ ph) ps))
ph  ps  pm2.21  applyComm  
)

thm (pm2.18 ()
   ()
   (↔ (↔ (¬ ph) ph) ph)
(¬ ph)  ph  nimp  absorbRedundantAntecedent  a3i  
)

export (test/in-gh/peano/prop_luk.ghi test/in-gh/peano/prop_luk.ghi () "")
