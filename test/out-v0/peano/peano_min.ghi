param (PROP prop.ghi () "")

kind (nat)

tvar (wff ph ps ch)
tvar (nat A B C D)
var (nat x y z)

term (wff (A. x ph))
term (wff (= A B))

# roughly equivalent to ax-17
stmt (alnfi ((ph x))
  ()
  (-> ph (A. x ph)))

## <title> Generalization Axiom </title>
## <table>
##       [ ph ]
## (A. x [ ph ] )
## </table>
stmt (gen ()
  (ph)
  (A. x ph))

# roughly Margaris A5, but without the subst
## <suggest> right('Remove', 'âˆ€') </suggest>
stmt (ax-4 () () (-> (A. x ph) ph))

# Margaris A4, a.k.a. ax-5
stmt (ax-alim () ()
  (-> (A. x (-> ph ps)) (-> (A. x ph) (A. x ps))))

stmt (ax-6 () () (-> (-. (A. x ph)) (A. x (-. (A. x ph)))))

stmt (ax-7 () () (-> (A. x (A. y ph)) (A. y (A. x ph))))

# Similar to ax-8, but for nat's instead of var's.
## <title> Transitive Property </title>
## <suggest> right('Simplify', '=') </suggest>
stmt (ax-eqtr () ()
  (-> (/\ (= A B) (= A C)) (= B C)))

# Similar to ax-9, but expanded to nat's instead of var's.
stmt (ax-tyex ((A x)) ()
  (-. (A. x (-. (= x A)))))

#stmt (ax-11 () () (-> (= x y) (-> (A. y ph) (A. x (-> (= x y) ph)))))


# Properties of numbers: Peano axioms

term (nat (0))
term (nat (S A))
term (nat (+ A B))
term (nat (* A B))

# Equality axiom for addition
stmt (addeq12 () ()
    (-> (/\ (= A B) (= C D)) (= (+ A C) (+ B D))))

# Equality axiom for multiplication
stmt (muleq12 () ()
    (-> (/\ (= A B) (= C D)) (= (* A C) (* B D))))

stmt (pa_ax1 () () (-. (= (0) (S A))))

# Note that the biconditional captures equality properties of S as
# well as the traditional Peano axiom 2.
stmt (pa_ax2 () ()
  (<-> (= A B) (= (S A) (S B))))

## <title> Additive Identity Axiom </title>
## <suggest> auto-right('Simplify', '0') </suggest>
stmt (pa_ax3 () ()
  (= (+ A (0)) A))
stmt (pa_ax4 () ()
  (= (+ A (S B)) (S (+ A B))))
## <title> Multiply by 0 Axiom </title>
stmt (pa_ax5 () ()
  (= (* A (0)) (0)))
stmt (pa_ax6 () ()
  (= (* A (S B)) (+ (* A B) A)))

stmt (pa_ind ((ph y)) ()
  (-> (/\           (A. x (-> (= x (0)) ph))
          (A. y (-> (A. x (-> (= x y) ph))
                    (A. x (-> (= x (S y)) ph)))))
      (A. x ph)))

# Ordered pairs, using a suitable construction in natural numbers.
term (nat (<,> A B))
stmt (df-op () ()
  (= (<,> A B) (+ (* (+ A B) (+ A B)) B)))


